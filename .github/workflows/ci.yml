name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install Python dependencies
      run: |
        cd apps/api
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node.js dependencies
      run: |
        cd apps/web
        npm ci

    - name: Run Python tests
      run: |
        cd apps/api
        python -m pytest tests/ -v --tb=short

    - name: Run TypeScript type check
      run: |
        cd apps/web
        npm run typecheck

    - name: Run ESLint
      run: |
        cd apps/web
        npm run lint

    - name: Check Python formatting (ruff)
      run: |
        cd apps/api
        python -m ruff check .

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json

    - name: Install Node.js dependencies
      run: |
        cd apps/web
        npm ci

    - name: Build Next.js app
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        VARS_NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
      run: |
        cd apps/web
        # Prefer secret, then org/repo var, otherwise let Next.js default handle it
        export NEXT_PUBLIC_API_URL="${NEXT_PUBLIC_API_URL:-${VARS_NEXT_PUBLIC_API_URL:-}}"
        if [ -n "$NEXT_PUBLIC_API_URL" ]; then echo "NEXT_PUBLIC_API_URL is set for build"; else echo "NEXT_PUBLIC_API_URL not set; using defaults"; fi
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nextjs-build
        path: apps/web/.next/

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/api
        push: false
        tags: energy-ic-copilot-api:test

    - name: Build Web Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/web
        push: false
        tags: energy-ic-copilot-web:test

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    if: ${{ secrets.VERCEL_DEPLOY_HOOK_URL != '' }}
    steps:
    - name: Trigger Vercel deploy hook (if configured)
      env:
        HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
      run: |
        if [ -n "$HOOK" ]; then
          echo "Triggering Vercel deploy hook..."
          curl -fsS -X POST "$HOOK" -H 'Content-Type: application/json' -d '{"source":"github-actions"}'
          echo "Deploy hook triggered"
        else
          echo "VERCEL_DEPLOY_HOOK_URL not set; skipping deploy"
        fi
